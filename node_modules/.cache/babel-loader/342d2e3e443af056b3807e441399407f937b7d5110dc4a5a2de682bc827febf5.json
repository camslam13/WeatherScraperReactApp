{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surfc\\\\WaveFinderProject\\\\wave-finder-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { ChakraProvider } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport LocationInput from './components/LocationInput';\nimport WavesTideInfo from './components/WavesTideInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [wavesTideData, setWavesTideData] = useState(null);\n  const [error, setError] = useState('');\n  const handleLocationSubmit = async location => {\n    try {\n      setError('');\n      const response = await axios.get(`http://localhost:5000/api/waves-tide-info?location=${encodeURIComponent(location)}`);\n      setWavesTideData(response.data);\n    } catch (error) {\n      setError('Error fetching waves and tide information.');\n      setWavesTideData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waves & Tide App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationInput, {\n        onLocationSubmit: handleLocationSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this), wavesTideData && /*#__PURE__*/_jsxDEV(WavesTideInfo, {\n        wavesTideData: wavesTideData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"R8J+Jwzhmc67/eH/w0c+sIW4xvE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ChakraProvider","React","useState","axios","LocationInput","WavesTideInfo","jsxDEV","_jsxDEV","App","_s","wavesTideData","setWavesTideData","error","setError","handleLocationSubmit","location","response","get","encodeURIComponent","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSubmit","_c","$RefreshReg$"],"sources":["C:/Users/surfc/WaveFinderProject/wave-finder-app/src/App.tsx"],"sourcesContent":["import { ChakraProvider, Box,  } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport LocationInput from './components/LocationInput';\nimport WavesTideInfo from './components/WavesTideInfo';\n\nconst App: React.FC = () => {\n  const [wavesTideData, setWavesTideData] = useState<any | null>(null);\n  const [error, setError] = useState<string>('');\n\n  const handleLocationSubmit = async (location: string) => {\n    try {\n      setError('');\n      const response = await axios.get(`http://localhost:5000/api/waves-tide-info?location=${encodeURIComponent(location)}`);\n      setWavesTideData(response.data);\n    } catch (error) {\n      setError('Error fetching waves and tide information.');\n      setWavesTideData(null);\n    }\n  };\n\n  return (\n    <ChakraProvider>\n      <div>\n        <h1>Waves & Tide App</h1>\n        <LocationInput onLocationSubmit={handleLocationSubmit} />\n\n        {error && <p>{error}</p>}\n\n        {wavesTideData && <WavesTideInfo wavesTideData={wavesTideData} />}\n      </div>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,SAASA,cAAc,QAAe,kBAAkB;AACxD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAa,IAAI,CAAC;EACpE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMY,oBAAoB,GAAG,MAAOC,QAAgB,IAAK;IACvD,IAAI;MACFF,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,sDAAqDC,kBAAkB,CAACH,QAAQ,CAAE,EAAC,CAAC;MACtHJ,gBAAgB,CAACK,QAAQ,CAACG,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,QAAQ,CAAC,4CAA4C,CAAC;MACtDF,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,oBACEJ,OAAA,CAACP,cAAc;IAAAoB,QAAA,eACbb,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBjB,OAAA,CAACH,aAAa;QAACqB,gBAAgB,EAAEX;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAExDZ,KAAK,iBAAIL,OAAA;QAAAa,QAAA,EAAIR;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEvBd,aAAa,iBAAIH,OAAA,CAACF,aAAa;QAACK,aAAa,EAAEA;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAACf,EAAA,CA3BID,GAAa;AAAAkB,EAAA,GAAblB,GAAa;AA6BnB,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}