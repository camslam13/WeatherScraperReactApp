{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surfc\\\\WaveFinderProject\\\\wave-finder-app\\\\src\\\\components\\\\WavesTideInfo.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WavesTideInfo = ({\n  location\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`/api/waves-tide-info?location=${encodeURIComponent(location)}`);\n        setData(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [location]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Waves & Tide Information for \", data.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wave Height: \", data.wave_height]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tide Height: \", data.tide_height]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WavesTideInfo, \"g3zYJBKDotUKdhn6CEROgYKG7Lw=\");\n_c = WavesTideInfo;\nexport default WavesTideInfo;\nvar _c;\n$RefreshReg$(_c, \"WavesTideInfo\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","WavesTideInfo","location","_s","data","setData","isLoading","setIsLoading","fetchData","response","get","encodeURIComponent","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","wave_height","tide_height","_c","$RefreshReg$"],"sources":["C:/Users/surfc/WaveFinderProject/wave-finder-app/src/components/WavesTideInfo.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface WaveTideData {\r\n  location: string;\r\n  wave_height: string;\r\n  tide_height: string;\r\n  // Add other properties as needed\r\n}\r\n\r\nconst WavesTideInfo: React.FC<{ location: string }> = ({ location }) => {\r\n  const [data, setData] = useState<WaveTideData | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(`/api/waves-tide-info?location=${encodeURIComponent(location)}`);\r\n        setData(response.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [location]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!data) {\r\n    return <div>No data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Waves & Tide Information for {data.location}</h2>\r\n      <p>Wave Height: {data.wave_height}</p>\r\n      <p>Tide Height: {data.tide_height}</p>\r\n      {/* Add other properties as needed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WavesTideInfo;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,aAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAsB,IAAI,CAAC;EAC3D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFD,YAAY,CAAC,IAAI,CAAC;QAClB,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,iCAAgCC,kBAAkB,CAACT,QAAQ,CAAE,EAAC,CAAC;QACjGG,OAAO,CAACI,QAAQ,CAACL,IAAI,CAAC;QACtBG,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CL,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,IAAII,SAAS,EAAE;IACb,oBAAON,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACd,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAc,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAAI,+BAA6B,EAACV,IAAI,CAACF,QAAQ;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrDlB,OAAA;MAAAc,QAAA,GAAG,eAAa,EAACV,IAAI,CAACe,WAAW;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtClB,OAAA;MAAAc,QAAA,GAAG,eAAa,EAACV,IAAI,CAACgB,WAAW;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEV,CAAC;AAACf,EAAA,CApCIF,aAA6C;AAAAoB,EAAA,GAA7CpB,aAA6C;AAsCnD,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}