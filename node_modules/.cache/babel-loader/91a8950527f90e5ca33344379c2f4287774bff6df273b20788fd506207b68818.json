{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surfc\\\\WaveFinderProject\\\\wave-finder-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport LocationInput from './components/LocationInput';\nimport WavesTideInfo from './components/WavesTideInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [wavesTideData, setWavesTideData] = useState(null);\n  const handleLocationSubmit = location => {\n    // When the location is submitted, update the state with the entered location\n    console.log(location);\n    setLocation(location);\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Waves & Tide App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationInput, {\n        onLocationSubmit: handleLocationSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), location && /*#__PURE__*/_jsxDEV(WavesTideInfo, {\n        location: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UWtW+H994ZvaShuwLWXKNgyTfpg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ChakraProvider","useState","LocationInput","WavesTideInfo","jsxDEV","_jsxDEV","App","_s","location","setLocation","wavesTideData","setWavesTideData","handleLocationSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSubmit","_c","$RefreshReg$"],"sources":["C:/Users/surfc/WaveFinderProject/wave-finder-app/src/App.tsx"],"sourcesContent":["import { ChakraProvider } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport LocationInput from './components/LocationInput';\nimport WavesTideInfo from './components/WavesTideInfo';\n\nconst App: React.FC = () => {\n  const [location, setLocation] = useState('');\n  const [wavesTideData, setWavesTideData] = useState<any | null>(null);\n\n  const handleLocationSubmit = (location: string) => {\n    // When the location is submitted, update the state with the entered location\n    console.log(location)\n    setLocation(location);\n  };\n\n  return (\n    <ChakraProvider>\n      <div>\n        <h1>Waves & Tide App</h1>\n        <LocationInput onLocationSubmit={handleLocationSubmit} />\n        {/* Show the WavesTideInfo component with the data from the backend */}\n        {location && <WavesTideInfo location={location} />}\n      </div>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAa,IAAI,CAAC;EAEpE,MAAMW,oBAAoB,GAAIJ,QAAgB,IAAK;IACjD;IACAK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrBC,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEH,OAAA,CAACL,cAAc;IAAAe,QAAA,eACbV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBd,OAAA,CAACH,aAAa;QAACkB,gBAAgB,EAAER;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAExDX,QAAQ,iBAAIH,OAAA,CAACF,aAAa;QAACK,QAAQ,EAAEA;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAACZ,EAAA,CApBID,GAAa;AAAAe,EAAA,GAAbf,GAAa;AAsBnB,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}