{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surfc\\\\WaveFinderProject\\\\wave-finder-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { ChakraProvider, Box, Heading, Text } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport LocationInput from './components/LocationInput';\nimport WeatherInfo from './components/WeatherInfo'; // Assuming you have a WeatherInfo component to display the weather\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState('');\n  const handleLocationSubmit = async (latitude, longitude) => {\n    try {\n      setError('');\n      const response = await axios.get(`http://localhost:5000/api/WeatherInfo?latitude=${latitude}&longitude=${longitude}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      setError('Error fetching weather information.');\n      setWeatherData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"gray.100\",\n      minHeight: \"100vh\",\n      py: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxW: \"md\",\n        mx: \"auto\",\n        p: 4,\n        bg: \"white\",\n        boxShadow: \"md\",\n        borderRadius: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"lg\",\n          textAlign: \"center\",\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocationInput, {\n          onLocationSubmit: handleLocationSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Text, {\n          color: \"red.500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherInfo, {\n          weatherData: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ycpPlWA+o3J2VyL7Hrvv7E658cI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ChakraProvider","Box","Heading","Text","React","useState","axios","LocationInput","WeatherInfo","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","error","setError","handleLocationSubmit","latitude","longitude","response","get","data","children","bg","minHeight","py","maxW","mx","p","boxShadow","borderRadius","as","size","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSubmit","color","_c","$RefreshReg$"],"sources":["C:/Users/surfc/WaveFinderProject/wave-finder-app/src/App.tsx"],"sourcesContent":["import { ChakraProvider, Box, Heading, Text } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport LocationInput from './components/LocationInput';\nimport WeatherInfo from './components/WeatherInfo'; // Assuming you have a WeatherInfo component to display the weather\n\nconst App: React.FC = () => {\n  const [weatherData, setWeatherData] = useState<any | null>(null);\n  const [error, setError] = useState<string>('');\n\n  const handleLocationSubmit = async (latitude: number, longitude: number) => {\n    try {\n      setError('');\n      const response = await axios.get(`http://localhost:5000/api/WeatherInfo?latitude=${latitude}&longitude=${longitude}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      setError('Error fetching weather information.');\n      setWeatherData(null);\n    }\n  };\n\n  return (\n    <ChakraProvider>\n      <Box bg=\"gray.100\" minHeight=\"100vh\" py={8}>\n        <Box maxW=\"md\" mx=\"auto\" p={4} bg=\"white\" boxShadow=\"md\" borderRadius=\"lg\">\n          <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">\n            Weather App\n          </Heading>\n          <LocationInput onLocationSubmit={handleLocationSubmit} />\n          {error && <Text color=\"red.500\">{error}</Text>}\n          {weatherData && <WeatherInfo weatherData={weatherData} />}\n        </Box>\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n\n\n\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,GAAG,EAAEC,OAAO,EAAEC,IAAI,QAAQ,kBAAkB;AACrE,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAa,IAAI,CAAC;EAChE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMY,oBAAoB,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,SAAiB,KAAK;IAC1E,IAAI;MACFH,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,kDAAiDH,QAAS,cAAaC,SAAU,EAAC,CAAC;MACrHL,cAAc,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,QAAQ,CAAC,qCAAqC,CAAC;MAC/CF,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEJ,OAAA,CAACV,cAAc;IAAAuB,QAAA,eACbb,OAAA,CAACT,GAAG;MAACuB,EAAE,EAAC,UAAU;MAACC,SAAS,EAAC,OAAO;MAACC,EAAE,EAAE,CAAE;MAAAH,QAAA,eACzCb,OAAA,CAACT,GAAG;QAAC0B,IAAI,EAAC,IAAI;QAACC,EAAE,EAAC,MAAM;QAACC,CAAC,EAAE,CAAE;QAACL,EAAE,EAAC,OAAO;QAACM,SAAS,EAAC,IAAI;QAACC,YAAY,EAAC,IAAI;QAAAR,QAAA,gBACxEb,OAAA,CAACR,OAAO;UAAC8B,EAAE,EAAC,IAAI;UAACC,IAAI,EAAC,IAAI;UAACC,SAAS,EAAC,QAAQ;UAAAX,QAAA,EAAC;QAE9C;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACV5B,OAAA,CAACH,aAAa;UAACgC,gBAAgB,EAAEtB;QAAqB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACxDvB,KAAK,iBAAIL,OAAA,CAACP,IAAI;UAACqC,KAAK,EAAC,SAAS;UAAAjB,QAAA,EAAER;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC7CzB,WAAW,iBAAIH,OAAA,CAACF,WAAW;UAACK,WAAW,EAAEA;QAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAAC1B,EAAA,CA7BID,GAAa;AAAA8B,EAAA,GAAb9B,GAAa;AA+BnB,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}